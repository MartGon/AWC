# First design - Do this one
# Every entity can publish and suscribe

class Game

    ...
    EventSytemPtr es;

    GetEvents():
        return es;

    AddMap(Map map):
        ...
        map->SetEventSystem(es);

class Map

    ...
    EventSytemPtr es;

    AddUnit(Unit unit):
        ...
        unit->SetEventSystem(es);

class Unit

    ...
    EventSytemPtr es;

class MoveCommand

    Execute(game):

        UnitMoveEvent ume;
        game->GetEvents()->Notifiy(ume);

# Second design
# Only Game can publish, others are subscribed

class Game

    ...
    EventSytemPtr es;

    GetEvents():
        return es;

    AddMap(Map map):
        ...
        els = map->GetEventListeners(es);
        es->Register(els)

class Map

class Unit

    ...
    EventSytemPtr es;

class MoveCommand

    Execute(game):

        UnitMoveEvent ume;
        game->GetEvents()->Notifiy(ume);

class MakeUnitCommand

    Execute(game):

        UnitSpawn us;
        game->GetEvents()->Notifiy(us);

        // Register new unit
        unit->GetEventListeners(es);
        game->GetEvents()->Register(els)